apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-ac
  namespace: argocd
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: deploy-ac
  template:
    metadata:
      labels:
        app: deploy-ac
    spec:
      serviceAccountName: test-app
      containers:
        - name: deploy-ac
          image: nexus.cluster.hmall.com:5000/ac-webapp:1.3
          ports:
            - containerPort: 7710
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-db
  namespace: argocd
spec:
  replicas: 2
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 1
  selector:
    matchLabels:
      app: redis-db
  template:
    metadata:
      labels:
        app: redis-db
    spec:
      serviceAccountName: test-app
      containers:
        - name: redis-db
          image: nexus.cluster.hmall.com:5000/redis:latest
          ports:
            - containerPort: 6379
          securityContext:
            privileged: true
          volumeMounts:
            - name: rdb
              mountPath: "/data"
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: rdb
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
